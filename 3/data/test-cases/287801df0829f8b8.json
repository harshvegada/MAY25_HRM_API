{"uid":"287801df0829f8b8","name":"verifySkillASCOrder","fullName":"testScript.VerifyWidgetsCases.verifySkillASCOrder","historyId":"569474f68d06f62e6ef551e49a6495e1","time":{"start":1751686546939,"stop":1751686548122,"duration":1183},"status":"failed","statusMessage":"Name Field Not Same: Lists differ at element [10]: API != Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment. expected [API] but found [Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment.]","statusTrace":"java.lang.AssertionError: Name Field Not Same: Lists differ at element [10]: API != Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment. expected [API] but found [Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment.]\n\tat org.testng.Assert.fail(Assert.java:99)\n\tat org.testng.Assert.failNotEquals(Assert.java:1037)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:140)\n\tat org.testng.Assert.assertEquals(Assert.java:1103)\n\tat testScript.VerifyWidgetsCases.verifySkillASCOrder(VerifyWidgetsCases.java:58)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:794)\n\tat org.testng.TestRunner.run(TestRunner.java:596)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:377)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:276)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1134)\n\tat org.testng.TestNG.runSuites(TestNG.java:1063)\n\tat org.testng.TestNG.run(TestNG.java:1031)\n\tat org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)\n\tat org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)\n\tat org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)\n\tat org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1751686543193,"stop":1751686546936,"duration":3743},"description":"","status":"passed","steps":[],"attachments":[{"uid":"318fc435a9e1f8f0","name":"Request","source":"318fc435a9e1f8f0.html","type":"text/html","size":328},{"uid":"4014032b9a86c276","name":"HTTP/1.1 200 OK","source":"4014032b9a86c276.html","type":"text/html","size":21801},{"uid":"231d57fb4d74fa66","name":"Request","source":"231d57fb4d74fa66.html","type":"text/html","size":1322},{"uid":"8510678aacfb5b33","name":"HTTP/1.1 200 OK","source":"8510678aacfb5b33.html","type":"text/html","size":511137},{"uid":"42440615f577e18a","name":"Request","source":"42440615f577e18a.html","type":"text/html","size":1299},{"uid":"b3f645fe7b5add8b","name":"HTTP/1.1 200 OK","source":"b3f645fe7b5add8b.html","type":"text/html","size":2313}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":6,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"Name Field Not Same: Lists differ at element [10]: API != Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment. expected [API] but found [Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment.]","statusTrace":"java.lang.AssertionError: Name Field Not Same: Lists differ at element [10]: API != Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment. expected [API] but found [Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment.]\n\tat org.testng.Assert.fail(Assert.java:99)\n\tat org.testng.Assert.failNotEquals(Assert.java:1037)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:140)\n\tat org.testng.Assert.assertEquals(Assert.java:1103)\n\tat testScript.VerifyWidgetsCases.verifySkillASCOrder(VerifyWidgetsCases.java:58)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:794)\n\tat org.testng.TestRunner.run(TestRunner.java:596)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:377)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:276)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1134)\n\tat org.testng.TestNG.runSuites(TestNG.java:1063)\n\tat org.testng.TestNG.run(TestNG.java:1031)\n\tat org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)\n\tat org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)\n\tat org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)\n\tat org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)\n","steps":[{"name":"Get All Skill based on 15, description, DESC","time":{"start":1751686547512,"stop":1751686547512,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected Description List : [The ability to convey thoughts, ideas, and information clearly and effectively while also actively listening and adapting to different situations and audiences., Effectively meeting customer needs, resolving issues, and building positive relationships to ensure satisfaction and loyalty., The ability to collect, interpret, and derive actionable insights from data to inform decision-making and solve complex problems., Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment., The ability to inspire, guide, and motivate individuals or teams toward achieving common goals, Effectively planning, organizing, and coordinating resources and people to achieve organizational objectives efficiently and productively., The ability to strategically promote products or services, engage target audiences, and drive business growth through effective communication and market analysis., Planning, executing, and overseeing tasks and resources to achieve project goals on time and within budget., AI & ML, AI & ML, AI & ML, The capacity to systematically investigate, analyze, and synthesize information to gain knowledge and solve problems., API, The ability to build relationships, persuade, and close deals to achieve revenue targets and meet customer needs effectively., The ability to design, code, and maintain software applications while continuously adapting to evolving technologies.]","time":{"start":1751686548109,"stop":1751686548110,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"df3c0877f19e5ba1","name":"Request","source":"df3c0877f19e5ba1.html","type":"text/html","size":1717},{"uid":"a42638b4182151b8","name":"HTTP/1.1 200 OK","source":"a42638b4182151b8.html","type":"text/html","size":6125},{"uid":"ca6a527b7e21baa5","name":"Request","source":"ca6a527b7e21baa5.html","type":"text/html","size":1597},{"uid":"355432377dde1c88","name":"HTTP/1.1 200 OK","source":"355432377dde1c88.html","type":"text/html","size":6125}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"tearDown","time":{"start":1751686548123,"stop":1751686548124,"duration":1},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"package","value":"testScript.VerifyWidgetsCases"},{"name":"testClass","value":"testScript.VerifyWidgetsCases"},{"name":"testMethod","value":"verifySkillASCOrder"},{"name":"parentSuite","value":"Surefire suite"},{"name":"suite","value":"Surefire test"},{"name":"subSuite","value":"testScript.VerifyWidgetsCases"},{"name":"host","value":"pkrvmbietmlfzoi"},{"name":"thread","value":"2435@pkrvmbietmlfzoi.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":11},"items":[{"uid":"583f6d972a9e7e30","reportUrl":"https://harshvegada.github.io/MAY25_HRM_API/42//#testresult/583f6d972a9e7e30","status":"failed","statusDetails":"Name Field Not Same: lists don't have the same size expected [15] but found [16]","time":{"start":1751179097047,"stop":1751179098992,"duration":1945}},{"uid":"edbbe23e5fcb5504","reportUrl":"https://harshvegada.github.io/MAY25_HRM_API/41//#testresult/edbbe23e5fcb5504","status":"failed","statusDetails":"Query param functional breaking.. expected [11] but found [15]","time":{"start":1751176998246,"stop":1751176999157,"duration":911}},{"uid":"7012f20ce64d01f0","reportUrl":"https://harshvegada.github.io/MAY25_HRM_API/40//#testresult/7012f20ce64d01f0","status":"failed","statusDetails":"Name Field Not Same: Lists differ at element [10]: API != Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment. expected [API] but found [Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment.]","time":{"start":1751171464665,"stop":1751171466214,"duration":1549}},{"uid":"1d25e3f444f4562f","reportUrl":"https://harshvegada.github.io/MAY25_HRM_API/38//#testresult/1d25e3f444f4562f","status":"failed","statusDetails":"Name Field Not Same: Lists differ at element [10]: API != Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment. expected [API] but found [Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment.]","time":{"start":1751164899151,"stop":1751164900363,"duration":1212}},{"uid":"ac4bbe36d74563b8","reportUrl":"https://harshvegada.github.io/MAY25_HRM_API/37//#testresult/ac4bbe36d74563b8","status":"failed","statusDetails":"Name Field Not Same: Lists differ at element [10]: API != Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment. expected [API] but found [Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment.]","time":{"start":1751164343898,"stop":1751164345027,"duration":1129}},{"uid":"d100ca9617ba28d0","reportUrl":"https://harshvegada.github.io/MAY25_HRM_API/36//#testresult/d100ca9617ba28d0","status":"failed","statusDetails":"Name Field Not Same: Lists differ at element [10]: API != Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment. expected [API] but found [Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment.]","time":{"start":1751124946754,"stop":1751124947955,"duration":1201}},{"uid":"a862af82314717ac","reportUrl":"https://harshvegada.github.io/MAY25_HRM_API/35//#testresult/a862af82314717ac","status":"failed","statusDetails":"Name Field Not Same: Lists differ at element [10]: API != Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment. expected [API] but found [Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment.]","time":{"start":1751124640318,"stop":1751124641594,"duration":1276}},{"uid":"bcf75a4d9c3604ec","reportUrl":"https://harshvegada.github.io/MAY25_HRM_API/34//#testresult/bcf75a4d9c3604ec","status":"failed","statusDetails":"Name Field Not Same: Lists differ at element [10]: API != Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment. expected [API] but found [Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment.]","time":{"start":1751123865400,"stop":1751123866622,"duration":1222}},{"uid":"d245cab2d5e801a5","reportUrl":"https://harshvegada.github.io/MAY25_HRM_API/33//#testresult/d245cab2d5e801a5","status":"failed","statusDetails":"Name Field Not Same: Lists differ at element [10]: API != Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment. expected [API] but found [Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment.]","time":{"start":1751123632802,"stop":1751123634371,"duration":1569}},{"uid":"6e8bc78752270017","reportUrl":"https://harshvegada.github.io/MAY25_HRM_API/31//#testresult/6e8bc78752270017","status":"failed","statusDetails":"Name Field Not Same: Lists differ at element [10]: API != Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment. expected [API] but found [Aims to analyze whether an entity is stable, liquid, solvent, or profitable enough to warrant a monetary investment.]","time":{"start":1751111830791,"stop":1751111832012,"duration":1221}}]},"tags":[]},"source":"287801df0829f8b8.json","parameterValues":[]}